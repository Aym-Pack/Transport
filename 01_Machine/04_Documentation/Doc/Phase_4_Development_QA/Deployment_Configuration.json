{
  "document_metadata": {
    "document_type": "Deployment Configuration Specifications",
    "phase": "Phase 4 - Development & QA",
    "version": "3.1.0",
    "last_updated": "2025-01-27",
    "related_documents": [
      "Hosting_Configuration.json",
      "Build_Configuration_Documentation.md",
      "Frontend_Monitoring_Setup.md"
    ]
  },
  "deployment_strategy": {
    "overview": "Multi-environment deployment strategy for DafnckMachine v3.1 with automated CI/CD pipelines",
    "deployment_model": "Blue-Green with Canary releases",
    "rollback_strategy": "Automated rollback on health check failures",
    "zero_downtime": true
  },
  "environments": {
    "development": {
      "name": "Development",
      "purpose": "Feature development and initial testing",
      "url": "https://dev.dafnckmachine.com",
      "auto_deploy": true,
      "branch": "develop",
      "resources": {
        "cpu": "2 vCPU",
        "memory": "4GB",
        "storage": "50GB SSD"
      },
      "database": {
        "type": "PostgreSQL",
        "version": "15",
        "size": "db.t3.micro",
        "backup_retention": "7 days"
      }
    },
    "staging": {
      "name": "Staging",
      "purpose": "Pre-production testing and QA validation",
      "url": "https://staging.dafnckmachine.com",
      "auto_deploy": false,
      "branch": "release/*",
      "resources": {
        "cpu": "4 vCPU",
        "memory": "8GB",
        "storage": "100GB SSD"
      },
      "database": {
        "type": "PostgreSQL",
        "version": "15",
        "size": "db.t3.small",
        "backup_retention": "14 days"
      }
    },
    "production": {
      "name": "Production",
      "purpose": "Live production environment",
      "url": "https://app.dafnckmachine.com",
      "auto_deploy": false,
      "branch": "main",
      "resources": {
        "cpu": "8 vCPU",
        "memory": "16GB",
        "storage": "500GB SSD"
      },
      "database": {
        "type": "PostgreSQL",
        "version": "15",
        "size": "db.r5.large",
        "backup_retention": "30 days",
        "multi_az": true
      }
    }
  },
  "ci_cd_pipeline": {
    "platform": "GitHub Actions",
    "workflow_triggers": [
      "push to develop",
      "pull request to main",
      "manual deployment",
      "scheduled deployment"
    ],
    "pipeline_stages": {
      "build": {
        "description": "Build application and create artifacts",
        "steps": [
          "Checkout code",
          "Setup Node.js environment",
          "Install dependencies",
          "Run linting and type checking",
          "Build application",
          "Create Docker image",
          "Push to container registry"
        ],
        "timeout": "15 minutes",
        "retry_attempts": 2
      },
      "test": {
        "description": "Run comprehensive test suite",
        "steps": [
          "Unit tests",
          "Integration tests",
          "E2E tests",
          "Security scans",
          "Performance tests",
          "Accessibility tests"
        ],
        "parallel_execution": true,
        "timeout": "30 minutes",
        "coverage_threshold": 80
      },
      "deploy": {
        "description": "Deploy to target environment",
        "steps": [
          "Environment preparation",
          "Database migrations",
          "Blue-green deployment",
          "Health checks",
          "Traffic routing",
          "Cleanup old versions"
        ],
        "timeout": "20 minutes",
        "rollback_on_failure": true
      },
      "post_deploy": {
        "description": "Post-deployment validation and monitoring",
        "steps": [
          "Smoke tests",
          "Performance validation",
          "Security verification",
          "Monitoring setup",
          "Notification sending"
        ],
        "timeout": "10 minutes"
      }
    }
  },
  "containerization": {
    "platform": "Docker",
    "base_image": "node:18-alpine",
    "multi_stage_build": true,
    "image_optimization": {
      "layer_caching": true,
      "dependency_caching": true,
      "build_args": [
        "NODE_ENV",
        "BUILD_VERSION",
        "API_URL"
      ]
    },
    "security": {
      "non_root_user": true,
      "vulnerability_scanning": true,
      "image_signing": true,
      "distroless_runtime": false
    },
    "registry": {
      "provider": "AWS ECR",
      "repository": "dafnckmachine/app",
      "retention_policy": "30 days",
      "scan_on_push": true
    }
  },
  "orchestration": {
    "platform": "AWS ECS Fargate",
    "cluster_configuration": {
      "name": "dafnckmachine-cluster",
      "capacity_providers": ["FARGATE", "FARGATE_SPOT"],
      "default_capacity_provider": "FARGATE"
    },
    "service_configuration": {
      "task_definition": {
        "cpu": "1024",
        "memory": "2048",
        "network_mode": "awsvpc",
        "requires_compatibilities": ["FARGATE"]
      },
      "service_settings": {
        "desired_count": 2,
        "min_capacity": 1,
        "max_capacity": 10,
        "deployment_configuration": {
          "maximum_percent": 200,
          "minimum_healthy_percent": 50
        }
      },
      "auto_scaling": {
        "target_cpu_utilization": 70,
        "target_memory_utilization": 80,
        "scale_out_cooldown": "300s",
        "scale_in_cooldown": "300s"
      }
    }
  },
  "load_balancing": {
    "type": "Application Load Balancer",
    "configuration": {
      "scheme": "internet-facing",
      "ip_address_type": "ipv4",
      "deletion_protection": true
    },
    "target_groups": {
      "blue": {
        "protocol": "HTTP",
        "port": 3000,
        "health_check": {
          "path": "/health",
          "interval": 30,
          "timeout": 5,
          "healthy_threshold": 2,
          "unhealthy_threshold": 3
        }
      },
      "green": {
        "protocol": "HTTP",
        "port": 3000,
        "health_check": {
          "path": "/health",
          "interval": 30,
          "timeout": 5,
          "healthy_threshold": 2,
          "unhealthy_threshold": 3
        }
      }
    },
    "ssl_configuration": {
      "certificate_arn": "arn:aws:acm:region:account:certificate/cert-id",
      "ssl_policy": "ELBSecurityPolicy-TLS-1-2-2017-01",
      "redirect_http_to_https": true
    }
  },
  "database_deployment": {
    "migration_strategy": "Blue-Green with data synchronization",
    "migration_tools": {
      "primary": "Prisma Migrate",
      "backup": "Custom SQL scripts"
    },
    "backup_strategy": {
      "automated_backups": true,
      "backup_window": "03:00-04:00 UTC",
      "retention_period": "30 days",
      "cross_region_backup": true
    },
    "connection_pooling": {
      "enabled": true,
      "max_connections": 100,
      "idle_timeout": "10 minutes",
      "pool_size": 20
    }
  },
  "secrets_management": {
    "provider": "AWS Secrets Manager",
    "rotation_policy": {
      "database_passwords": "90 days",
      "api_keys": "180 days",
      "certificates": "365 days"
    },
    "access_control": {
      "principle": "least privilege",
      "role_based_access": true,
      "audit_logging": true
    }
  },
  "monitoring_and_logging": {
    "application_monitoring": {
      "provider": "DataDog",
      "metrics": [
        "response_time",
        "error_rate",
        "throughput",
        "cpu_utilization",
        "memory_usage"
      ],
      "alerting": {
        "error_rate_threshold": "5%",
        "response_time_threshold": "2000ms",
        "availability_threshold": "99.9%"
      }
    },
    "log_aggregation": {
      "provider": "AWS CloudWatch Logs",
      "log_groups": [
        "/aws/ecs/dafnckmachine/app",
        "/aws/ecs/dafnckmachine/nginx",
        "/aws/rds/dafnckmachine/postgresql"
      ],
      "retention_period": "30 days",
      "log_streaming": true
    },
    "distributed_tracing": {
      "provider": "AWS X-Ray",
      "sampling_rate": "10%",
      "trace_retention": "30 days"
    }
  },
  "security_configuration": {
    "network_security": {
      "vpc_configuration": {
        "cidr_block": "10.0.0.0/16",
        "public_subnets": ["10.0.1.0/24", "10.0.2.0/24"],
        "private_subnets": ["10.0.3.0/24", "10.0.4.0/24"],
        "nat_gateway": true
      },
      "security_groups": {
        "alb_security_group": {
          "ingress": [
            {"port": 80, "protocol": "HTTP", "source": "0.0.0.0/0"},
            {"port": 443, "protocol": "HTTPS", "source": "0.0.0.0/0"}
          ]
        },
        "app_security_group": {
          "ingress": [
            {"port": 3000, "protocol": "HTTP", "source": "alb_security_group"}
          ]
        },
        "db_security_group": {
          "ingress": [
            {"port": 5432, "protocol": "PostgreSQL", "source": "app_security_group"}
          ]
        }
      }
    },
    "application_security": {
      "waf_configuration": {
        "enabled": true,
        "rules": [
          "AWS Managed Core Rule Set",
          "AWS Managed Known Bad Inputs",
          "AWS Managed SQL Injection",
          "AWS Managed XSS"
        ]
      },
      "ssl_termination": "load_balancer",
      "security_headers": {
        "strict_transport_security": true,
        "content_security_policy": true,
        "x_frame_options": "DENY",
        "x_content_type_options": "nosniff"
      }
    }
  },
  "disaster_recovery": {
    "rto": "4 hours",
    "rpo": "1 hour",
    "backup_strategy": {
      "database_backups": {
        "frequency": "every 6 hours",
        "retention": "30 days",
        "cross_region": true
      },
      "application_backups": {
        "frequency": "daily",
        "retention": "7 days",
        "includes": ["configuration", "user_data", "logs"]
      }
    },
    "failover_strategy": {
      "type": "active-passive",
      "secondary_region": "us-east-1",
      "automated_failover": false,
      "manual_failover_time": "30 minutes"
    }
  },
  "performance_optimization": {
    "caching_strategy": {
      "application_cache": {
        "provider": "Redis",
        "cluster_mode": true,
        "ttl_default": "1 hour",
        "eviction_policy": "allkeys-lru"
      },
      "cdn_configuration": {
        "provider": "AWS CloudFront",
        "cache_behaviors": [
          {"path": "/static/*", "ttl": "1 year"},
          {"path": "/api/*", "ttl": "5 minutes"},
          {"path": "/*", "ttl": "1 hour"}
        ]
      }
    },
    "database_optimization": {
      "connection_pooling": true,
      "read_replicas": 2,
      "query_optimization": true,
      "index_optimization": true
    }
  },
  "cost_optimization": {
    "resource_scheduling": {
      "development_environment": {
        "schedule": "weekdays 8AM-8PM",
        "auto_shutdown": true
      },
      "staging_environment": {
        "schedule": "weekdays 6AM-10PM",
        "auto_shutdown": false
      }
    },
    "spot_instances": {
      "enabled": true,
      "percentage": "50%",
      "fallback_to_on_demand": true
    },
    "reserved_instances": {
      "production_database": "1 year term",
      "production_compute": "1 year term"
    }
  },
  "compliance_and_governance": {
    "compliance_frameworks": [
      "SOC 2 Type II",
      "GDPR",
      "CCPA"
    ],
    "audit_logging": {
      "enabled": true,
      "retention": "7 years",
      "immutable": true
    },
    "access_controls": {
      "mfa_required": true,
      "role_based_access": true,
      "principle_of_least_privilege": true
    }
  },
  "deployment_automation": {
    "infrastructure_as_code": {
      "tool": "AWS CDK",
      "language": "TypeScript",
      "version_control": true,
      "automated_testing": true
    },
    "configuration_management": {
      "tool": "AWS Systems Manager Parameter Store",
      "environment_specific": true,
      "encryption": true
    },
    "deployment_gates": {
      "automated_tests": "required",
      "security_scans": "required",
      "performance_tests": "required",
      "manual_approval": "production only"
    }
  }
} 